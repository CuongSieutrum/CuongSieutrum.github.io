<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Development on Blog-Nguyễn Cường</title>
    <link>https://cuongsieutrum.github.io/tags/web-development/</link>
    <description>Recent content in Web Development on Blog-Nguyễn Cường</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://cuongsieutrum.github.io/tags/web-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript DOM (Document Object Model)</title>
      <link>https://cuongsieutrum.github.io/javascript/5/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/5/</guid>
      <description>&lt;h1 id=&#34;javascript-dom-document-object-model&#34;&gt;&#xD;&#xA;  JavaScript DOM (Document Object Model)&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#javascript-dom-document-object-model&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;DOM (Document Object Model)&lt;/strong&gt; là một khái niệm quan trọng trong phát triển web. Nó cung cấp một cách để JavaScript có thể truy cập và thay đổi nội dung, cấu trúc và kiểu dáng của các tài liệu HTML hoặc XML. Khi bạn làm việc với các trang web, bạn sẽ thường xuyên cần sử dụng DOM để thay đổi các phần tử trên trang mà không cần phải tải lại toàn bộ trang.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lập Trình Bất Đồng Bộ (Asynchronous Programming) trong JavaScript: Promises và async/await</title>
      <link>https://cuongsieutrum.github.io/javascript/4/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/4/</guid>
      <description>&lt;h1 id=&#34;lập-trình-bất-đồng-bộ-asynchronous-programming-trong-javascript-promises-và-asyncawait&#34;&gt;&#xD;&#xA;  Lập Trình Bất Đồng Bộ (Asynchronous Programming) trong JavaScript: Promises và async/await&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#l%e1%ba%adp-tr%c3%acnh-b%e1%ba%a5t-%c4%91%e1%bb%93ng-b%e1%bb%99-asynchronous-programming-trong-javascript-promises-v%c3%a0-asyncawait&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Trong phát triển web hiện đại, việc xử lý các tác vụ bất đồng bộ là rất quan trọng, đặc biệt khi làm việc với các API, truy vấn cơ sở dữ liệu, hoặc các tác vụ yêu cầu thời gian như tải dữ liệu từ máy chủ. JavaScript cung cấp các công cụ mạnh mẽ để làm việc với các tác vụ bất đồng bộ, trong đó Promises và async/await là hai công cụ phổ biến nhất.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lập Trình Hướng Đối Tượng (OOP) trong JavaScript</title>
      <link>https://cuongsieutrum.github.io/javascript/2/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/2/</guid>
      <description>&lt;h1 id=&#34;lập-trình-hướng-đối-tượng-oop-trong-javascript&#34;&gt;&#xD;&#xA;  Lập Trình Hướng Đối Tượng (OOP) trong JavaScript&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#l%e1%ba%adp-tr%c3%acnh-h%c6%b0%e1%bb%9bng-%c4%91%e1%bb%91i-t%c6%b0%e1%bb%a3ng-oop-trong-javascript&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Lập trình hướng đối tượng (OOP) là một phương pháp lập trình phổ biến giúp tổ chức mã nguồn hiệu quả hơn thông qua việc sử dụng các đối tượng. JavaScript hỗ trợ OOP và cung cấp các khái niệm như lớp (class), đối tượng (object), kế thừa (inheritance), đóng gói (encapsulation) và đa hình (polymorphism). Trong bài viết này, chúng ta sẽ khám phá các khái niệm này và cách sử dụng chúng trong JavaScript.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quản Lý Sự Kiện (Event Handling) trong JavaScript</title>
      <link>https://cuongsieutrum.github.io/javascript/3/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/3/</guid>
      <description>&lt;h1 id=&#34;quản-lý-sự-kiện-event-handling-trong-javascript&#34;&gt;&#xD;&#xA;  Quản Lý Sự Kiện (Event Handling) trong JavaScript&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#qu%e1%ba%a3n-l%c3%bd-s%e1%bb%b1-ki%e1%bb%87n-event-handling-trong-javascript&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;Quản lý sự kiện (Event Handling) trong JavaScript cho phép chúng ta xử lý các hành động của người dùng, như nhấp chuột, di chuột, nhập văn bản, v.v., và phản hồi lại những hành động này. Việc sử dụng các sự kiện là một phần không thể thiếu trong phát triển web, giúp làm cho ứng dụng trở nên tương tác và thân thiện hơn.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript</title>
      <link>https://cuongsieutrum.github.io/javascript/</link>
      <pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#heading&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>JavaScript Cơ Bản</title>
      <link>https://cuongsieutrum.github.io/javascript/1/</link>
      <pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://cuongsieutrum.github.io/javascript/1/</guid>
      <description>&lt;h1 id=&#34;javascript-cơ-bản&#34;&gt;&#xD;&#xA;  JavaScript Cơ Bản&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#javascript-c%c6%a1-b%e1%ba%a3n&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;JavaScript là một ngôn ngữ lập trình phổ biến được sử dụng chủ yếu trong phát triển web. Nó có thể được chạy trên trình duyệt và server (với Node.js). Bài viết này sẽ giới thiệu các khái niệm cơ bản trong JavaScript, bao gồm khai báo biến, kiểu dữ liệu, cấu trúc điều kiện, vòng lặp, và hàm.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
